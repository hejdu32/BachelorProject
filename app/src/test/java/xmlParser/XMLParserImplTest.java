/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package xmlParser;

import org.junit.Before;
import org.junit.Test;
import xmlParser.implementations.CustomNode;
import xmlParser.implementations.CustomWay;
import xmlParser.implementations.XMLParserImpl;

import java.io.FileNotFoundException;

import static org.junit.Assert.*;

public class XMLParserImplTest {
    private static final XMLParserImpl parser = new XMLParserImpl();
    private static boolean setUpIsDone = false;

    @Before
    public void setUp() {
        if(setUpIsDone){
            return;
        }
        try {
            parser.parse("s");
            setUpIsDone = true;
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }


    @Test
    public void checkForExistanceOfTwoKnownWays(){
            long id1 = 0;
            long id2 = 0;
            for(CustomWay myWay: parser.getWays()) {
                long id = myWay.getId();
                if(id == 279060626){
                    id1 = id;
                }
                if(id == 616476468){
                    id2 = id;
                }
            }
            assertEquals(279060626, id1);
            assertEquals(616476468, id2);
    }

    @Test
    public void checkIfNumberOfNodesInDatastructureIsCorrect(){
        assertEquals(parser.getNodes().size(), parser.getNodesToSearchFor().size());
    }

    @Test
    public void checkSanityOfCoordinateTransform(){
        CustomNode node1 = parser.getNodes().get(4939299713L);
        CustomNode node2 = parser.getNodes().get(8190430016L);
        assertNotEquals(0, node1.getLatitudeAsXCoord());
        assertNotEquals(0, node1.getLongtitudeAsYCoord());
        assertNotEquals(0, node2.getLatitudeAsXCoord());
        assertNotEquals(0, node2.getLongtitudeAsYCoord());

    }

}
